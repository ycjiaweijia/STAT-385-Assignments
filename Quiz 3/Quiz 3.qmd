---
title: "STAT 385 Quiz 3"
editor: visual
---

## Quiz 3 Instructions

Please complete the following questions and submit a file named **Quiz3.R** to [Gradescope](https://www.gradescope.com/login).

**Remember:**

<!-- -   Do not rename external data files or edit them in any way. In other words, don't modify *data.csv*. Your code won't work properly on my version of that data set, if you do. -->

-   Do not use global paths in you script. Instead, use *setwd()* interactively in the console, but do not forget to remove or comment out this part of the code before you submit. The directory structure of your machine is not the same as the one on Gradescope's virtual machines.
-   Do not destroy or overwrite any variables in your program. I check them only after I have run your entire program from start to finish.
-   Check to make sure you do not have any syntax errors. Code that doesn't run will get a very bad grade.
-   Make sure to name your submission **Quiz3.R**

**Tip:** before submitting, it might help to clear all the objects from your workspace, and then source your file before you submit it. This will often uncover bugs.

::: {style="height:30px;"}
:::


### Question 1 \[1pt\]

Create the following vector `vec1` using the function `seq()`.

<!-- Find out how to use the function `seq()` to create the following vector `vec1`. -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- # seq(1, 15, 2) -->
<!-- vec1 <- seq(1.1, 21, 0.2) -->
<!-- vec1 -->

<!-- ``` -->

::: {style="height:30px;"}
:::

### Question 2 \[1pt\]

Find out how to use the function `seq()` to create the following vector `vec2`.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- seq(50, 0, -5) -->
<!-- ``` -->

::: {style="height:30px;"}
:::

### Question 3 \[1pt\]

Find out how to use the colon operator `:` to create the following vector `vec3`.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- 8.5:-8.5 -->
<!-- ``` -->

::: {style="height:30px;"}
:::


### Question 4 \[1pt\]

Find out how to use the function `rep()` and the input vector `1:3` to create the following vector `vec4` which has `1 2 3` repeated twenty times.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- rep(c(1,2,3), times = 20) -->
<!-- ``` -->

::: {style="height:30px;"}
:::


### Question 5 \[1pt\]

Find out how to use the function `rep()` and the input vector `1:3` to create the following vector `vec5` which has thirty `1`, thirty `2`, and thirty `3`.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- rep(1:3, each = 30) -->

<!-- ``` -->

::: {style="height:30px;"}
:::

### Question 6 \[1pt\]

Find out how to use the function `rep()` and the input vector `1:3` to create the following vector `vec6` which has twenty `1`, ten `2`, and forty `3`.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- rep(1:3, c(20, 10, 40)) -->
<!-- ``` -->

::: {style="height:30px;"}
:::


### Question 7 \[2pt\]

Use the function `sum()` to show that $1 + 2 + \cdots + 1000 = 500500.$ Create vector `vec7` with values $1, 2, \cdots, 1000$. Then calculate the sum.

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- # sum(1:1000) -->
<!-- ``` -->

<!-- ### Question 8 -->

<!-- What is the data type -- as returned by `typeof()` -- of each of the following vectors. Try guessing the data type without running any commands. -->

<!-- * `v1`: where `v1 <- c(FALSE, TRUE)` -->

<!-- * `v2`: where `v2 <- c(0L, 1L)` -->

<!-- * `v3`: where `v3 <- c(0, 1)` -->

<!-- * `v4`: where `v4 <- c('0', '1')` -->

<!-- * `v5`: where `v5 <- c(v1, v2)` -->

<!-- * `v6`: where `v6 <- c(v5, v3)` -->

<!-- * `v7`: where `v7 <- c(v6, v4)` -->

<!-- ```{r} -->

<!-- v1 <- c(FALSE, TRUE) -->

<!-- v2 <- c(0L, 1L) -->

<!-- v3 <- c(0, 1) -->

<!-- v4 <- c('0', '1') -->

<!-- v5 <- c(v1, v2) -->

<!-- v6 <- c(v5, v3) -->

<!-- v7 <- c(v6, v4) -->

<!-- typeof(v1) -->

<!-- typeof(v2) -->

<!-- typeof(v3) -->

<!-- typeof(v4) -->

<!-- typeof(v5) -->

<!-- typeof(v6) -->

<!-- typeof(v7) -->

<!-- ``` -->

::: {style="height:30px;"}
:::


### Question 8 \[2pt\]

Load the R package `MASS` and use the data frame `cats`. Obtain vectors `sex` and `bwt` from the data frame with `sex <- cats$Sex`, `bwt <- cats$Bwt`. Show the body weights of female cats by creating vector `bwtF`. How many female cats are there in the data set? Please save the length value in object `len`.

<!-- ```{r} -->
<!-- library(MASS) -->
<!-- sex <- cats$Sex -->
<!-- bwt <- cats$Bwt -->
<!-- bwtF<- bwt[sex=="F"] -->
<!-- bwtF -->
<!-- len <- length(bwtF) -->
<!-- len <- sum(sex=="F") -->
<!-- len -->
<!-- ``` -->
